<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">
	<title>Saffire Language</title>
	<link href="http://fonts.googleapis.com/css?family=Droid+Sans:400,700" rel="stylesheet" type="text/css">
	<link href="style.css" rel="stylesheet" type="text/css">
	<script type="text/javascript" src="scripts/smooth.pack.js"></script>
</head>

<body>
	<a id="fork-me" href="https://github.com/saffire/saffire"></a>
	<nav>
		<ol>
			<li><a href="#home">home</a></li>
			<li><a href="#about">about</a></li>
			<li><a href="#tutorial">tutorial</a></li>
			<li><a href="http://spec.saffire-lang.org">language specification</a></li>
			<li><a href="https://groups.google.com/forum/?fromgroups#!forum/saffire-internals">mailing list</a></li>
			<li><a href="https://github.com/saffire/saffire">on github</a></li>
		</ol>
	</nav>

	<a name="home"></a>
	<section id="home">
		<div class="content">
			<header>
				<h1>Saffire</h1>
				<h2>A new language.</h2>
			</header>

			<p class="hello-world">
			import io;<br />
			io.print(<em>"Hello world"</em>);
			</p>

			<img src="images/logo.png" id="logo" alt="Saffire logo" />
		</div>
	</section> <!-- #home -->

	<a name="about"></a>
	<section id="about">
		<div class="content">
			<h2>About Saffire</h2>

			<p>Saffire is a new, in-progress programming scripting language, based 
			primarily on Python, PHP, and Ruby. So why would you want to use Saffire?</p>

			<ul>
				<li>Everything is an object.</li>
				<li>Unicode support out of the box.</li>
				<li>Operator and method overloading.</li>
				<li>No global functions.</li>
				<li>It is <em class="blink">awesome.</em></li>
			</ul>

			<p><strong>Want to join development?</strong> Go to the 
			<a href="http://webchat.freenode.net?channels=saffire&amp;uio=d4">#saffire channel</a>
			on freenode, sign in to 
			<a href="https://groups.google.com/forum/?fromgroups#!forum/saffire-internals">our mailinglist</a>,
			read the <a href="http://spec.saffire-lang.org/">language specification</a> so far,
			and <a href="https://github.com/saffire/saffire">fork saffire on github</a>.
			</p>

			<h2>History</h2>
			
			<p>Joshua Thijssen, looking for some fun, decided he wanted to learn more about Flex/Bison. 
			Very quickly he decided to create a parser that could actually parse PHP files, but when reading 
			up on the Zend Language Parser, he thought; "Wouldn't it be fun to have a language that takes all 
			the good things from Python, Ruby, and PHP, and mix them together?" Some other people certainly 
			thought so, and presto: Saffire was born.</p>

			<p>The name Saffire is a hybrid between the English word <em>Sapphire</em>, and its Dutch 
			counterpart <em>Saffier</em>.</p>
			
		</div>
	</section> <!-- #about -->

	<a name="tutorial"></a>
	<section id="tutorial">
		<div class="content">
			<h2>Tutorial</h2>
			<p>Now, wait a minute. Just because we have a fancy website, doesn't mean we're done, 
			not by a long shot. You might want to read up on the language specification, but don't 
			expect to have a working Saffire binary any time soon.</p>

			<p>That being said, we do have a few snippets of what Saffire code will look like.</p>

			<p><em>Example 1:</em> The mandatory hello world example:</p>

<pre class="source saffire"><span class="keyword">import</span> <span class="identifier">io</span><span class="operator">;</span>
<span class="identifier">io</span><span class="operator">.</span><span class="identifier">print</span><span class="operator">(</span><span class="string">&quot;Hello world&quot;</span><span class="operator">)</span><span class="operator">;</span>
</pre>

			<p><em>Example 2:</em> Using variables:</p>

<pre class="source saffire"><span class="keyword">import</span> <span class="identifier">io</span><span class="operator">;</span>

<span class="identifier">a</span> <span class="operator">=</span> <span class="number">1</span><span class="operator">;</span>
<span class="identifier">a</span> <span class="operator">+=</span> <span class="number">1</span><span class="operator">;</span>

<span class="identifier">io</span><span class="operator">.</span><span class="identifier">print</span><span class="operator">(</span><span class="string">&quot;The value of a: &quot;</span><span class="operator">,</span> <span class="identifier">a</span> <span class="operator">,</span> <span class="string">&quot;\n&quot;</span><span class="operator">)</span><span class="operator">;</span>
</pre>

			<p><em>Example 3:</em> A simple class in Saffire:</p>
<pre class="source saffire"><span class="keyword">import</span> <span class="identifier">io</span><span class="operator">;</span>

<span class="keyword">class</span> <span class="identifier">Foo</span> <span class="operator">{</span>
	<span class="keyword">const</span> <span class="identifier">FOOBAR</span> <span class="operator">=</span> <span class="string">&quot;foobar&quot;</span><span class="operator">;</span>

	<span class="keyword">protected</span> <span class="keyword">property</span> <span class="identifier">a</span> <span class="operator">=</span> <span class="number">1</span><span class="operator">;</span>

	<span class="keyword">public</span> <span class="keyword">method</span> <span class="identifier">ctor</span><span class="operator">(</span><span class="operator">)</span> <span class="operator">{</span>
		<span class="comment">// Constructor</span>
	<span class="operator">}</span>

	<span class="keyword">public</span> <span class="keyword">method</span> <span class="identifier">foo</span><span class="operator">(</span><span class="operator">)</span> <span class="operator">{</span>
		<span class="keyword">return</span> <span class="keyword">self</span><span class="operator">.</span><span class="identifier">a</span><span class="operator">;</span>
	<span class="operator">}</span>
<span class="operator">}</span>

<span class="identifier">f</span> <span class="operator">=</span> <span class="identifier">Foo</span><span class="operator">(</span><span class="operator">)</span><span class="operator">;</span>
<span class="identifier">io</span><span class="operator">.</span><span class="identifier">print</span> <span class="operator">(</span><span class="string">&quot;The value is: &quot;</span><span class="operator">,</span> <span class="identifier">f</span><span class="operator">.</span><span class="identifier">foo</span><span class="operator">(</span><span class="operator">)</span><span class="operator">)</span><span class="operator">;</span>
</pre>
		</div>
	</section>

	<footer>
		<ol>
			<li><a href="#home">home</a></li>
			<li><a href="#about">about</a></li>
			<li><a href="#tutorial">tutorial</a></li>
			<li><a href="http://spec.saffire-lang.org">language specification</a></li>
			<li><a href="https://groups.google.com/forum/?fromgroups#!forum/saffire-internals">mailing list</a></li>
			<li><a href="https://github.com/saffire/saffire">on github</a></li>
		</ol>
	</footer>
</body>
</html>